@use "sass:list";
@use "sass:math";

.plussGroup {
  cursor: pointer;
  margin: 15px 0;
}
.usersfound{
  max-height: 120px;
  height: auto;
  overflow-y: auto;
}
.btnAdd {
  font-size: 25px;
  color: rgb(181, 181, 181);
  transition: all 0.4s;
}
.btnAdd:hover {
  color: rgb(255, 255, 255) ;
}
.serachUser{
  margin: 30px;
}
.user-modal {
  display: flex;
  justify-content: space-around;
  flex-direction: row;
  align-items: center;
  margin: 20px 0;
  padding: 7px 0;
}
.user-modal * {
  margin: 3px 0;
}

.searchUserBox {
  position: relative;
}



.active-loadding {
  display: block !important;
}

.loadderC,
.customOverlay {
  display: none;
}

.customOverlay {
  position: absolute;
  height: 100%;
  width: 100%;
}

//LOADER
$count: 10;
$time: 2; //in seconds
$size: 20;
$color: #ffffff;

.preloader {
  /* size */
  z-index: 100;
  width: $size + px;
  height: $size + px;
  position: absolute;
  left: 80%;
  top: 50%;
  transform: translateX(-50%) translateY(-50%);
  animation: rotatePreloader $time + s infinite ease-in;
}
@keyframes rotatePreloader {
  0% {
    transform: translateX(-50%) translateY(-50%) rotateZ(0deg);
  }
  100% {
    transform: translateX(-50%) translateY(-50%) rotateZ(-360deg);
  }
}
.preloader div {
  position: absolute;
  width: 100%;
  height: 100%;
  opacity: 0;
}
.preloader div:before {
  content: "";
  position: absolute;
  left: 50%;
  top: 0%;
  width: 10%;
  height: 10%;
  background-color: $color;
  transform: translateX(-50%);
  border-radius: 50%;
}

@for $i from 1 through $count {
  .preloader div:nth-child(#{$i}) {
    transform: rotateZ((math.div(360, $count) * ($i - 1)) + deg);
    animation: rotateCircle + $i $time + s infinite linear;
    z-index: $count - $i;
  }
  @keyframes rotateCircle#{$i} {
    #{percentage(math.div((math.div(50 , $count) * ($i - 1)) , 100))} {
      opacity: 0;
    }
    #{percentage(math.div(((math.div(50 , $count) + 0.0001) * ($i - 1)) , 100))} {
      opacity: 1;
      transform: rotateZ((0 - (math.div(360, $count) * ($i - 2))) + deg);
    }
    #{percentage(math.div(((math.div(50, $count) * ($i - 0)) + 2) , 100))} {
      transform: rotateZ((0 - (math.div(360, $count) * ($i - 1))) + deg);
    }
    #{percentage(math.div(((50 + (math.div(50 , $count) * ($i - 0))) + 2) , 100))} {
      transform: rotateZ((0 - (math.div(360, $count) * ($i - 1))) + deg);
    }
    100% {
      transform: rotateZ((0 - (math.div(360, $count) * ($count - 1))) + deg);
      opacity: 1;
    }
  }
}
